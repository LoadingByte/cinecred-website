server {
    listen 80;
    server_name localhost;

    root .../build;

    # Redirect historical URLs.
    location = /files/repo.loadingbyte.com.asc { return 308 /linux-repositories/cinecred.asc; }
    location ~ ^/assets/(.*)$ { return 308 /home/$1; }
    location ~ ^/guide/global-styling/(.*)$ { return 308 /guide/project-settings/$1; }
    location ~ ^/dl/\d\.\d\.\d/?$ { return 308 /dl/; }
    # If the user requests /404/, don't serve the 404 page with 200, but internally redirect to a dummy URL to provoke a real 404.
    location /404/ { rewrite ^ /404_/ last; }
    # Attempt to serve non-translated files.
    location / {
        try_files $uri @multilang;
        add_header Cache-Control max-age=86400;
    }
    # If unsuccessful, attempt to serve translated files, and dirs via translated index.html files.
    location @multilang {
        # If the user requests a dir without a trailing slash, redirect him, as just serving the URL would mess with relative links.
        rewrite ^([^.]*[^/])$ $1/ permanent;
        # Find the best matching language for the request.
        set_by_lua_file $lang .../lang.lua;
        # If the URI has a file extension, insert the best language before that.
        set_by_lua_block $uri_with_lang { return ngx.re.sub(ngx.var.uri, "\\.([^.]+)$", "." .. ngx.var.lang .. ".$1") }
        # Try serving the requested file or index.html in the requested dir with the best language.
        try_files $uri_with_lang ${uri}index.$lang.html =404;
        error_page 404 @404;
        # no-cache means that the browser has to check whether the resource as changed on every request.
        # This ensures that a language change immediately applies.
        add_header Cache-Control no-cache;
        add_header Content-Language $lang;
        add_header Vary Accept-Language;
    }
    # If unsuccessful, serve a translated 404 page.
    location @404 {
        try_files /404/index.$lang.html =404;
    }
}
